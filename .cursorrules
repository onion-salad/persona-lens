# Persona Lens 開発ルール

## 1. 作業の進め方

1. ステップバイステップで作業を進める
   - 各ステップの目標を明確にする
   - 一度に一つのタスクに集中する
   - 完了基準を明確にする

2. ドキュメントの更新
   - 作業完了後、必ず`docs/IMPLEMENTATION_PLAN.md`を更新する
   - 完了したタスクにチェックマークを付ける
   - 新しく発見された要件や課題を追加する

3. コミットルール
   - 機能単位でコミットする
   - コミットメッセージは日本語で具体的に書く
   - プレフィックスを使用する（feat:, fix:, docs:, etc）

## 2. コーディング規約

1. ファイル構造
   - 機能ごとにディレクトリを分ける
   - コンポーネントは役割ごとにサブディレクトリに分類する
   - 共通の型定義は`types`ディレクトリに配置する

2. 命名規則
   - コンポーネント: PascalCase
   - 関数: camelCase
   - 定数: SNAKE_CASE
   - ファイル名はコンポーネント名と一致させる

3. インポート順序
   - React関連
   - 外部ライブラリ
   - 内部コンポーネント
   - 型定義
   - スタイル

## 3. 品質管理

1. エラー処理
   - エラーは必ず処理する
   - ユーザーフレンドリーなエラーメッセージを表示する
   - エラーログを適切に記録する

2. パフォーマンス
   - 不要な再レンダリングを避ける
   - メモ化を適切に使用する
   - 画像の最適化を行う

3. アクセシビリティ
   - ARIA属性を適切に設定する
   - キーボード操作をサポートする
   - 色のコントラストを確保する

## 4. レビュー基準

1. コードレビュー
   - 命名の適切さ
   - ロジックの明確さ
   - エラー処理の完全性
   - パフォーマンスへの影響
   - セキュリティの考慮

2. UIレビュー
   - デザインの一貫性
   - レスポンシブ対応
   - アニメーションの適切さ
   - ユーザビリティ

## 5. デプロイメント

1. 環境設定
   - 環境変数の管理
   - APIキーの安全な取り扱い
   - 本番環境の設定確認

2. デプロイ前チェック
   - テストの実行
   - ビルドの確認
   - パフォーマンスチェック
   - セキュリティチェック 